plugins {
    id 'java'
    id "application"
}

group 'oracle.interview'
version '1.0'

// application {
    mainClassName = 'oracle.interview.metrics.Main'
// }

repositories {
   mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testRuntime('org.junit.vintage:junit-vintage-engine:5.4.0')

}

//targetCompatibility = JavaVersion.VERSION_1_8
//sourceCompatibility = JavaVersion.VERSION_1_8
// Comment in lines 27-35 to run tests
//Run tests with: ./gradlew clean build
// tasks.withType(Test) {
//     useJUnitPlatform()
//     testLogging {
//         exceptionFormat "full"
//         events "started", "skipped", "passed", "failed"
//         showStandardStreams true
//     }
// }

// spotless {
//   // optional: limit format enforcement to just the files changed by this feature branch
// //   ratchetFrom 'origin/main'

//   format 'misc', {
//     // define the files to apply `misc` to
//     target '*.gradle', '*.md', '.gitignore'

//     // define the steps to apply to those files
//     trimTrailingWhitespace()
//     indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
//     endWithNewline()
//   }
//   java {
//     // don't need to set target, it is inferred from java

//     // apply a specific flavor of google-java-format
//     googleJavaFormat('1.8').aosp().reflowLongStrings()
//     // make sure every file has the following copyright header.
//     // optionally, Spotless can set copyright years by digging
//     // through git history (see "license" section below)
//     licenseHeader '/* (C)$YEAR */'
//   }
// }
